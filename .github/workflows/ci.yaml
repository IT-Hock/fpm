name: "Continuous Integration"

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5.2.0
        with:
          gpg_private_key: ${{ secrets.SIGNING_KEY }}
          passphrase: ${{ secrets.GPG_PASSWORD }}
          fingerprint: "B42AE76D432131F5D3977D733111556EC95FC0A4"
          git_config_global: true
          git_user_signingkey: true
          git_push_gpgsign: true
          git_tag_gpgsign: true
          git_commit_gpgsign: true
          
      - name: Checkout repository
        uses: actions/checkout@v3.2.0
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
          path: '.'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Golang with cache
        uses: magnetikonline/action-golang-cache@v3
        with:
          go-version-file: go.mod

      - name: Install dependencies
        run: go mod download && go mod verify

      - name: Test with Go
        run: go test -v ./... -coverprofile=coverage.txt -covermode=atomic -json > TestResults.json

      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: Go-results
          path: TestResults.json

      - name: Upload Go Coverage results
        uses: actions/upload-artifact@v3
        with:
          name: Go-coverage
          path: coverage.txt

      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Task
        run: task default
        env:
          GITHUB_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}